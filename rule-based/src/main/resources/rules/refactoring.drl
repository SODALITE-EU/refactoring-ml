global nl.jads.sodalite.rules.RefactoringManager refMgt;
global nl.jads.sodalite.rules.DisabledRuleSet disabledSet;
import nl.jads.sodalite.events.LocationChangedEvent;
import nl.jads.sodalite.events.DeploymentNeeded;
import nl.jads.sodalite.events.DeploymentChanged;
import nl.jads.sodalite.events.DeploymentRemove;
import nl.jads.sodalite.events.ResourceEvent;
import nl.jads.sodalite.events.Alert
import java.util.Arrays

rule "de_to_it"
  when
    $f1 : LocationChangedEvent(preLoc == "de", currentLoc == "it") and
    $f2 : DeploymentChanged()
  then
    disabledSet.disable("de_to_it");
    System.out.println("de_to_it rule triggered");
    System.out.println("de_to_it rule executed");
end

rule "deploy_it"
  when
    $f1 : DeploymentNeeded(currentLoc == "it")
  then
    disabledSet.disable("deploy_it");
    System.out.println("deploy_it rule triggered");
    System.out.println("deploy_it rule executed");
end

rule "deploy_at"
  when
    $f1 : DeploymentNeeded(currentLoc == "at")
  then
    disabledSet.disable("deploy_at");
    System.out.println("deploy_at rule triggered");
    System.out.println("deploy_at rule executed");
end

rule "deploy_remove_at"
  when
    $f1 : DeploymentRemove(preLoc == "at")
  then
    disabledSet.disable("deploy_remove_at");
    System.out.println("deploy_remove_at rule triggered");
    System.out.println("deploy_remove_at rule executed");
end

rule "deploy_remove_it"
  when
    $f1 : DeploymentRemove(preLoc == "it")
  then
    disabledSet.disable("deploy_remove_it");
    System.out.println("deploy_remove_it rule triggered");
    System.out.println("deploy_remove_it rule executed");
end

rule "HostHighCpuLoad"
  when
    $f1 : Alert(name == "HostHighCpuLoad")
  then
    disabledSet.disable("HostHighCpuLoad");
    System.out.println("HostHighCpuLoad rule triggered");
    System.out.println("HostHighCpuLoad rule executed");
end

rule "HostLowCpuLoad"
  when
    $f1 : Alert(name == "HostLowCpuLoad")
  then
    disabledSet.disable("HostLowCpuLoad");
    System.out.println("HostLowCpuLoad rule triggered");
    System.out.println("HostLowCpuLoad rule executed");
end

rule "edgetpu_temp_warning"
  when
    $f1 : Alert(name == "edgetpu_temp_warning")
  then
    disabledSet.disable("edgetpu_temp_warning");
    System.out.println("edgetpu_temp_warning rule triggered");
    System.out.println("edgetpu_temp_warning rule executed");
end

rule "edgetpu_temp_critical"
  when
    $f1 : Alert(name == "edgetpu_temp_critical")
  then
    disabledSet.disable("edgetpu_temp_critical");
    System.out.println("edgetpu_temp_critical rule triggered");
    System.out.println("edgetpu_temp_critical rule executed");
end

rule "GPUAdded"
  when
    $f1 : ResourceEvent(eType == "ResourceAdded", rType=="gpu")
  then
    disabledSet.disable("GPUAdded");
    System.out.println("GPUAdded rule triggered");
    System.out.println("GPUAdded rule executed");
end

rule "TPUAdded"
  when
    $f1 : ResourceEvent(eType == "ResourceAdded", rType=="tpu")
  then
    disabledSet.disable("TPUAdded");
    System.out.println("TPUAdded rule triggered");
    System.out.println("TPUAdded rule executed");
end